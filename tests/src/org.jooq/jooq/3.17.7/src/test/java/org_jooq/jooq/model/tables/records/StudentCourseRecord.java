/*
 * Copyright and related rights waived via CC0
 *
 * You should have received a copy of the CC0 legalcode along with this
 * work. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */
package org_jooq.jooq.model.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import org_jooq.jooq.model.tables.StudentCourse;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentCourseRecord extends TableRecordImpl<StudentCourseRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>college.student_course.course_id</code>.
     */
    public void setCourseId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>college.student_course.course_id</code>.
     */
    public Long getCourseId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>college.student_course.student_id</code>.
     */
    public void setStudentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>college.student_course.student_id</code>.
     */
    public Long getStudentId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StudentCourse.STUDENT_COURSE.COURSE_ID;
    }

    @Override
    public Field<Long> field2() {
        return StudentCourse.STUDENT_COURSE.STUDENT_ID;
    }

    @Override
    public Long component1() {
        return getCourseId();
    }

    @Override
    public Long component2() {
        return getStudentId();
    }

    @Override
    public Long value1() {
        return getCourseId();
    }

    @Override
    public Long value2() {
        return getStudentId();
    }

    @Override
    public StudentCourseRecord value1(Long value) {
        setCourseId(value);
        return this;
    }

    @Override
    public StudentCourseRecord value2(Long value) {
        setStudentId(value);
        return this;
    }

    @Override
    public StudentCourseRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentCourseRecord
     */
    public StudentCourseRecord() {
        super(StudentCourse.STUDENT_COURSE);
    }

    /**
     * Create a detached, initialised StudentCourseRecord
     */
    public StudentCourseRecord(Long courseId, Long studentId) {
        super(StudentCourse.STUDENT_COURSE);

        setCourseId(courseId);
        setStudentId(studentId);
    }
}
