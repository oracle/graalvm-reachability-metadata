/*
 * Copyright and related rights waived via CC0
 *
 * You should have received a copy of the CC0 legalcode along with this
 * work. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */
package org_jooq.jooq.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import org_jooq.jooq.model.tables.CourseMaterial;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseMaterialRecord extends UpdatableRecordImpl<CourseMaterialRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>college.course_material.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>college.course_material.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>college.course_material.url</code>.
     */
    public void setUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>college.course_material.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>college.course_material.course_id</code>.
     */
    public void setCourseId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>college.course_material.course_id</code>.
     */
    public Long getCourseId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CourseMaterial.COURSE_MATERIAL.ID;
    }

    @Override
    public Field<String> field2() {
        return CourseMaterial.COURSE_MATERIAL.URL;
    }

    @Override
    public Field<Long> field3() {
        return CourseMaterial.COURSE_MATERIAL.COURSE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public Long component3() {
        return getCourseId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public Long value3() {
        return getCourseId();
    }

    @Override
    public CourseMaterialRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CourseMaterialRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public CourseMaterialRecord value3(Long value) {
        setCourseId(value);
        return this;
    }

    @Override
    public CourseMaterialRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseMaterialRecord
     */
    public CourseMaterialRecord() {
        super(CourseMaterial.COURSE_MATERIAL);
    }

    /**
     * Create a detached, initialised CourseMaterialRecord
     */
    public CourseMaterialRecord(Long id, String url, Long courseId) {
        super(CourseMaterial.COURSE_MATERIAL);

        setId(id);
        setUrl(url);
        setCourseId(courseId);
    }
}
