/*
 * Copyright and related rights waived via CC0
 *
 * You should have received a copy of the CC0 legalcode along with this
 * work. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

plugins {
    id "org.graalvm.internal.tck"
}

String libraryVersion = tck.testedLibraryVersion.get()

dependencies {

    testImplementation "org.hibernate.orm:hibernate-core:$libraryVersion"

    testImplementation "org.hibernate.models:hibernate-models:1.0.0.CR3"
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'com.h2database:h2:2.3.232'
    testImplementation 'jakarta.validation:jakarta.validation-api:3.1.0'
    testImplementation 'org.postgresql:postgresql:42.7.6'
    testImplementation 'com.oracle.database.jdbc:ojdbc11:21.9.0.0'
    testImplementation 'org.jboss.logging:jboss-logging:3.6.1.Final'

    testImplementation 'ch.qos.logback:logback-classic:1.5.18'
    testCompileOnly("net.bytebuddy:byte-buddy:1.15.11")
    testCompileOnly("org.graalvm.nativeimage:graal-hotspot-library:22.0.0")
}

task updateGeneratedMetadata {
    doLast {
        final ant = new groovy.ant.AntBuilder()
        final metadataDir = project.projectDir.toString() + "/generated-metadata"

        // replace typeReachable value for entries generated by IdentifierGeneratorTest test class
        ant.replace(file: metadataDir + "/reflect-config.json",
                token: "org_hibernate_orm.hibernate_core.IdentifierGeneratorTest",
                value: "org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory")
    }
}

task deleteGeneratedMetadata(type: Delete) {
    delete files(project.projectDir.toString() + "/generated-metadata")
}

graalvmNative {
    agent {
        defaultMode = "conditional"
        modes {
            conditional {
                userCodeFilterPath = "metadata-conditions-filter.json"
                extraFilterPath = "metadata-extra-filter.json"
            }
        }
        metadataCopy {
            inputTaskNames.add("test")
            outputDirectories.add("generated-metadata")
            mergeWithExisting = true
        }
    }
}
