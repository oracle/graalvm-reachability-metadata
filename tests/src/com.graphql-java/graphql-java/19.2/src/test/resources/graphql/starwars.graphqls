schema {
    query: QueryType
    mutation: Mutation
}

type Mutation {
    addFriend(characterId: ID!, newFriend: NewCharacter!) : Character!
}

type QueryType {
    hero(episode: Episode): Character!
    human(id : String) : Human
    droid(id: ID!): Droid
    humans: HumanConnection
}

enum Episode {
    NEWHOPE
    EMPIRE
    JEDI
}

type Human implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]
    homePlanet: String
}

type Droid implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    primaryFunction: String
}

interface Character {
    id: ID!
    name: String!
}

input NewCharacter {
    name: String
}

type HumanConnection {
    edges: [HumanEdge]
    pageInfo: PageInfo!
}

type HumanEdge {
    cursor: String!
    node: Human
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}
