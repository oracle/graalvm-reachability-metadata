[
  {
    "name": "java.util.ArrayList",
    "condition": {
      "typeReachable": "liquibase.snapshot.SnapshotGeneratorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.util.HashSet",
    "condition": {
      "typeReachable": "liquibase.lockservice.StandardLockService"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "java.util.concurrent.ConcurrentHashMap",
    "condition": {
      "typeReachable": "liquibase.snapshot.SnapshotGeneratorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.AbstractExtensibleObject",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.util.ObjectUtil$DefaultBeanIntrospector"
    }
  },
  {
    "name": "liquibase.change.AbstractChange",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.util.ObjectUtil$DefaultBeanIntrospector"
    }
  },
  {
    "name": "liquibase.change.AbstractSQLChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractSQLChange",
    "condition": {
      "typeReachable": "liquibase.changelog.RanChangeSet"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractTableChange",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.util.ObjectUtil$DefaultBeanIntrospector"
    }
  },
  {
    "name": "liquibase.change.AddColumnConfig",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.change.ChangeFactory",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.ColumnConfig",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.change.ConstraintsConfig",
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChange",
    "condition": {
      "typeReachable": "liquibase.change.core.UpdateDataChange"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddColumnChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddLookupTableChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AlterSequenceChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateIndexChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateProcedureChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateSequenceChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateTableChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.CreateViewChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DeleteDataChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropColumnChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropIndexChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropProcedureChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropSequenceChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropTableChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.DropViewChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.EmptyChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.InsertDataChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.LoadDataChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.MergeColumnChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.OutputChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RawSQLChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameColumnChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameSequenceChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameTableChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.RenameViewChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.SQLFileChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.StopChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.TagDatabaseChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.core.UpdateDataChange",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapper",
    "condition": {
      "typeReachable": "liquibase.change.ChangeFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "liquibase.changelog.ChangeLogHistoryServiceFactory",
    "condition": {
      "typeReachable": "liquibase.changelog.ChangeLogHistoryServiceFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.changelog.StandardChangeLogHistoryService",
    "condition": {
      "typeReachable": "liquibase.changelog.ChangeLogHistoryServiceFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.CommandFactory",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.DropAllCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.UpdateCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.ChangeExecListenerCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DatabaseChangelogCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DbUrlConnectionCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.LockServiceCommandStep",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.ShowSummaryArgument",
    "condition": {
      "typeReachable": "liquibase.command.CommandFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.ConfiguredValueModifierFactory",
    "condition": {
      "typeReachable": "liquibase.configuration.LiquibaseConfiguration"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.LiquibaseConfiguration",
    "condition": {
      "typeReachable": "liquibase.Scope"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.database.jvm.JdbcConnection",
    "condition": {
      "typeReachable": "liquibase.database.core.H2Database"
    },
    "methods": [
      {
        "name": "getWrappedConnection",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BigIntType",
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAutoIncrement",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BinaryTypeSnowflake",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BlobType",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BooleanType",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.CharType",
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobType",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DateTimeType",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleDataTypeSnowflake",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleType",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.IntType",
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setAutoIncrement",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TextDataTypeSnowflake",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampNTZTypeSnowflake",
    "condition": {
      "typeReachable": "liquibase.datatype.DataTypeFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.VarcharType",
    "condition": {
      "typeReachable": "liquibase.change.AbstractChange"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.diff.core.StandardDiffGenerator",
    "condition": {
      "typeReachable": "liquibase.diff.DiffGeneratorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.executor.ExecutorService",
    "condition": {
      "typeReachable": "liquibase.lockservice.StandardLockService"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.executor.jvm.JdbcExecutor",
    "condition": {
      "typeReachable": "liquibase.executor.ExecutorService"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.license.LicenseServiceFactory",
    "condition": {
      "typeReachable": "liquibase.license.LicenseServiceUtils"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.lockservice.StandardLockService",
    "condition": {
      "typeReachable": "liquibase.lockservice.LockServiceFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.core.LogServiceFactory",
    "condition": {
      "typeReachable": "liquibase.Scope"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.mdc.MdcManagerFactory",
    "condition": {
      "typeReachable": "liquibase.Scope"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.plugin.AbstractPlugin",
    "queryAllPublicMethods": true,
    "condition": {
      "typeReachable": "liquibase.util.ObjectUtil$DefaultBeanIntrospector"
    }
  },
  {
    "name": "liquibase.precondition.AbstractPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.PreconditionLogic",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.PreconditionLogic",
    "fields": [
      {
        "name": "nestedPreconditions"
      }
    ],
    "condition": {
      "typeReachable": "liquibase.precondition.PreconditionLogic"
    }
  },
  {
    "name": "liquibase.precondition.PreconditionLogic",
    "fields": [
      {
        "name": "nestedPreconditions"
      }
    ],
    "condition": {
      "typeReachable": "liquibase.serializer.ReflectionSerializer"
    }
  },
  {
    "name": "liquibase.precondition.core.AndPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.core.ChangeLogPropertyDefinedPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "property"
      },
      {
        "name": "value"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.DBMSPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.precondition.core.DBMSPrecondition",
    "condition": {
      "typeReachable": "liquibase.precondition.PreconditionFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.DBMSPrecondition",
    "condition": {
      "typeReachable": "liquibase.precondition.PreconditionLogic"
    },
    "fields": [
      {
        "name": "type"
      }
    ],
    "methods": [
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.OrPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.PreconditionContainer",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "allPublicMethods": true
  },
  {
    "name": "liquibase.precondition.core.PreconditionContainer",
    "fields": [
      {
        "name": "onError"
      },
      {
        "name": "onErrorMessage"
      },
      {
        "name": "onFail"
      },
      {
        "name": "onFailMessage"
      },
      {
        "name": "onSqlOutput"
      }
    ],
    "condition": {
      "typeReachable": "liquibase.precondition.core.PreconditionContainer"
    }
  },
  {
    "name": "liquibase.precondition.core.RunningAsPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "username"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.SqlPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "expectedResult"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setExpectedResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.precondition.core.TableExistsPrecondition",
    "condition": {
      "typeReachable": "liquibase.command.core.helpers.DatabaseChangelogCommandStep"
    },
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "tableName"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "liquibase.serializer.AbstractLiquibaseSerializable",
    "condition": {
      "typeReachable": "liquibase.serializer.ReflectionSerializer"
    },
    "allDeclaredFields": true
  },
  {
    "name": "liquibase.sql.visitor.AppendSqlVisitor",
    "condition": {
      "typeReachable": "liquibase.sql.visitor.SqlVisitorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.PrependSqlVisitor",
    "condition": {
      "typeReachable": "liquibase.sql.visitor.SqlVisitorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.RegExpReplaceSqlVisitor",
    "condition": {
      "typeReachable": "liquibase.sql.visitor.SqlVisitorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.ReplaceSqlVisitor",
    "condition": {
      "typeReachable": "liquibase.sql.visitor.SqlVisitorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [

        ]
      }
    ]
  }
]
