[
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.channel.SimpleChannelInboundHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "io.netty.handler.codec.MessageToByteEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
    },
    "name": "org.apache.rocketmq.common.protocol.header.SendMessageRequestHeaderV2",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
    },
    "name": "org.apache.rocketmq.common.protocol.header.SendMessageResponseHeader",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
    },
    "name": "org.apache.rocketmq.common.protocol.header.namesrv.GetRouteInfoRequestHeader",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingSerializable"
    },
    "name": "org.apache.rocketmq.common.protocol.heartbeat.HeartbeatData",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.client.impl.MQClientAPIImpl"
    },
    "name": "org.apache.rocketmq.common.protocol.route.TopicRouteData",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "org.apache.rocketmq.remoting.netty.NettyDecoder"
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "org.apache.rocketmq.remoting.netty.NettyEncoder"
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$NettyClientHandler"
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$4"
    },
    "name": "org.apache.rocketmq.remoting.netty.NettyRemotingClient$NettyConnectManageHandler",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
    },
    "name": "org.apache.rocketmq.remoting.protocol.RemotingCommand",
    "allDeclaredFields": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.apache.rocketmq.remoting.protocol.RemotingCommand",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.route.BrokerData",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.route.TopicRouteData",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.route.QueueData",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.heartbeat.HeartbeatData",
    "allDeclaredFields": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData",
    "allDeclaredFields": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.heartbeat.ProducerData",
    "allDeclaredFields": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.rocketmq.common.protocol.heartbeat.SubscriptionData",
    "allDeclaredFields": true,
    "allPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "org.apache.rocketmq.remoting.protocol.RemotingSerializable"
    },
    "name": "org.apache.rocketmq.remoting.protocol.RemotingCommand",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  }
]
