[
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "[Lcom.github.dockerjava.api.model.VolumesFrom;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "[Lcom.github.dockerjava.api.model.VolumesFrom;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.op.TxnImpl"
    },
    "name": "[Ljava.lang.Object;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "[Ljava.lang.String;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "[Ljava.lang.String;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "[Lorg.testcontainers.shaded.com.google.common.collect.ImmutableMapEntry;"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.AsyncDockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.CreateContainerResponse",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWarnings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.DockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.ExecCreateCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.ExecCreateCmdResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.ExecStartCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.command.GraphData",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.GraphData",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.command.GraphDriver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.GraphDriver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.dockerjava.api.command.InspectContainerResponse"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse$ContainerState",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.dockerjava.api.command.InspectContainerResponse"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse$Mount",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectContainerResponse$Mount",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectExecResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectExecResponse$Container",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.dockerjava.api.command.InspectExecResponse"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.command.SyncDockerCmd",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.AuthConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getIdentitytoken",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRegistryAddress",
        "parameterTypes": []
      },
      {
        "name": "getRegistrytoken",
        "parameterTypes": []
      },
      {
        "name": "getStackOrchestrator",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.Binds",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Binds",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.ContainerConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.ContainerConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.ContainerNetwork",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.ContainerNetwork",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getEndpointId",
        "parameterTypes": []
      },
      {
        "name": "getGateway",
        "parameterTypes": []
      },
      {
        "name": "getGlobalIPv6Address",
        "parameterTypes": []
      },
      {
        "name": "getGlobalIPv6PrefixLen",
        "parameterTypes": []
      },
      {
        "name": "getIpAddress",
        "parameterTypes": []
      },
      {
        "name": "getIpPrefixLen",
        "parameterTypes": []
      },
      {
        "name": "getIpV6Gateway",
        "parameterTypes": []
      },
      {
        "name": "getIpamConfig",
        "parameterTypes": []
      },
      {
        "name": "getMacAddress",
        "parameterTypes": []
      },
      {
        "name": "getNetworkID",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.DockerObject",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRawValues",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.ExposedPorts",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.ExposedPorts",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.HostConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.HostConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAutoRemove",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceReadBps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceReadIOps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceWriteBps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioDeviceWriteIOps",
        "parameterTypes": []
      },
      {
        "name": "getBlkioWeight",
        "parameterTypes": []
      },
      {
        "name": "getBlkioWeightDevice",
        "parameterTypes": []
      },
      {
        "name": "getCapAdd",
        "parameterTypes": []
      },
      {
        "name": "getCapDrop",
        "parameterTypes": []
      },
      {
        "name": "getCgroup",
        "parameterTypes": []
      },
      {
        "name": "getCgroupParent",
        "parameterTypes": []
      },
      {
        "name": "getCgroupnsMode",
        "parameterTypes": []
      },
      {
        "name": "getConsoleSize",
        "parameterTypes": []
      },
      {
        "name": "getContainerIDFile",
        "parameterTypes": []
      },
      {
        "name": "getCpuCount",
        "parameterTypes": []
      },
      {
        "name": "getCpuPercent",
        "parameterTypes": []
      },
      {
        "name": "getCpuPeriod",
        "parameterTypes": []
      },
      {
        "name": "getCpuQuota",
        "parameterTypes": []
      },
      {
        "name": "getCpuRealtimePeriod",
        "parameterTypes": []
      },
      {
        "name": "getCpuRealtimeRuntime",
        "parameterTypes": []
      },
      {
        "name": "getCpuShares",
        "parameterTypes": []
      },
      {
        "name": "getCpusetCpus",
        "parameterTypes": []
      },
      {
        "name": "getCpusetMems",
        "parameterTypes": []
      },
      {
        "name": "getDeviceCgroupRules",
        "parameterTypes": []
      },
      {
        "name": "getDeviceRequests",
        "parameterTypes": []
      },
      {
        "name": "getDevices",
        "parameterTypes": []
      },
      {
        "name": "getDiskQuota",
        "parameterTypes": []
      },
      {
        "name": "getDns",
        "parameterTypes": []
      },
      {
        "name": "getDnsOptions",
        "parameterTypes": []
      },
      {
        "name": "getDnsSearch",
        "parameterTypes": []
      },
      {
        "name": "getExtraHosts",
        "parameterTypes": []
      },
      {
        "name": "getGroupAdd",
        "parameterTypes": []
      },
      {
        "name": "getInit",
        "parameterTypes": []
      },
      {
        "name": "getIoMaximumBandwidth",
        "parameterTypes": []
      },
      {
        "name": "getIoMaximumIOps",
        "parameterTypes": []
      },
      {
        "name": "getIpcMode",
        "parameterTypes": []
      },
      {
        "name": "getIsolation",
        "parameterTypes": []
      },
      {
        "name": "getKernelMemory",
        "parameterTypes": []
      },
      {
        "name": "getLxcConf",
        "parameterTypes": []
      },
      {
        "name": "getMemory",
        "parameterTypes": []
      },
      {
        "name": "getMemoryReservation",
        "parameterTypes": []
      },
      {
        "name": "getMemorySwap",
        "parameterTypes": []
      },
      {
        "name": "getMemorySwappiness",
        "parameterTypes": []
      },
      {
        "name": "getMounts",
        "parameterTypes": []
      },
      {
        "name": "getNanoCPUs",
        "parameterTypes": []
      },
      {
        "name": "getNetworkMode",
        "parameterTypes": []
      },
      {
        "name": "getOomKillDisable",
        "parameterTypes": []
      },
      {
        "name": "getOomScoreAdj",
        "parameterTypes": []
      },
      {
        "name": "getPidMode",
        "parameterTypes": []
      },
      {
        "name": "getPidsLimit",
        "parameterTypes": []
      },
      {
        "name": "getPortBindings",
        "parameterTypes": []
      },
      {
        "name": "getPrivileged",
        "parameterTypes": []
      },
      {
        "name": "getPublishAllPorts",
        "parameterTypes": []
      },
      {
        "name": "getReadonlyRootfs",
        "parameterTypes": []
      },
      {
        "name": "getRestartPolicy",
        "parameterTypes": []
      },
      {
        "name": "getRuntime",
        "parameterTypes": []
      },
      {
        "name": "getSecurityOpts",
        "parameterTypes": []
      },
      {
        "name": "getShmSize",
        "parameterTypes": []
      },
      {
        "name": "getStorageOpt",
        "parameterTypes": []
      },
      {
        "name": "getSysctls",
        "parameterTypes": []
      },
      {
        "name": "getTmpFs",
        "parameterTypes": []
      },
      {
        "name": "getUlimits",
        "parameterTypes": []
      },
      {
        "name": "getUsernsMode",
        "parameterTypes": []
      },
      {
        "name": "getUtSMode",
        "parameterTypes": []
      },
      {
        "name": "getVolumeDriver",
        "parameterTypes": []
      },
      {
        "name": "getVolumesFrom",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.Isolation",
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Isolation",
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Links",
    "methods": [
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.LogConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "com.github.dockerjava.api.model.LogConfig$LoggingType"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.LogConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "com.github.dockerjava.api.model.LogConfig$LoggingType"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.LogConfig$LoggingType",
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.LogConfig$LoggingType",
    "methods": [
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.NetworkSettings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.NetworkSettings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.Ports",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Ports",
    "methods": [
      {
        "name": "fromPrimitive",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.RestartPolicy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.RestartPolicy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdClusterImpl"
    },
    "name": "com.github.dockerjava.api.model.Volume",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Volume",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "com.github.dockerjava.api.model.Volumes",
    "methods": [
      {
        "name": "toPrimitive",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.api.WatchProgressRequest"
    },
    "name": "com.google.protobuf.ExtensionRegistry",
    "methods": [
      {
        "name": "getEmptyRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.ClientConnectionManager"
    },
    "name": "io.grpc.census.InternalCensusStatsAccessor"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.ClientConnectionManager"
    },
    "name": "io.grpc.census.InternalCensusTracingAccessor"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.grpc.netty.WriteBufferingAndExceptionHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.WatchImpl$WatcherImpl"
    },
    "name": "java.lang.StackWalker",
    "methods": [
      {
        "name": "walk",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.WatchImpl$WatcherImpl"
    },
    "name": "java.lang.StackWalker$StackFrame",
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "java.net.UnixDomainSocketAddress",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.api.AuthRoleAddRequest"
    },
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "java.security.SecureRandomParameters"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.ClientConnectionManager"
    },
    "name": "java.util.concurrent.atomic.LongAdder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.resolver.AbstractNameResolver"
    },
    "name": "java.util.concurrent.atomic.LongAdder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "add",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.ByteSequence"
    },
    "name": "libcore.io.Memory"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.WatchImpl$$Lambda$606/0x0000000800eba4a0"
    },
    "name": "org.mockito.configuration.MockitoConfiguration"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.ByteSequence"
    },
    "name": "org.robolectric.Robolectric"
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrAsyncDockerCmd",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrDockerCmd",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.CreateContainerCmdImpl$NetworkingConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEndpointsConfig",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ExecCreateCmdImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContainerId",
        "parameterTypes": []
      },
      {
        "name": "getEnv",
        "parameterTypes": []
      },
      {
        "name": "getPrivileged",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getWorkingDir",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.com.github.dockerjava.core.command.ExecStartCmdImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "org.testcontainers.shaded.org.awaitility.core.ConditionFactory$1",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.api.AuthRoleAddRequest"
    },
    "name": "sun.misc.Unsafe",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "arrayBaseOffset",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "arrayIndexScale",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "copyMemory",
        "parameterTypes": [
          "long",
          "long",
          "long"
        ]
      },
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getByte",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getByte",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getDouble",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getFloat",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getInt",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getInt",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getLong",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "getObject",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "objectFieldOffset",
        "parameterTypes": [
          "java.lang.reflect.Field"
        ]
      },
      {
        "name": "putBoolean",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      },
      {
        "name": "putByte",
        "parameterTypes": [
          "long",
          "byte"
        ]
      },
      {
        "name": "putByte",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "byte"
        ]
      },
      {
        "name": "putDouble",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "double"
        ]
      },
      {
        "name": "putFloat",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "float"
        ]
      },
      {
        "name": "putInt",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "putInt",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "int"
        ]
      },
      {
        "name": "putLong",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "putLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "putObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.impl.ClientConnectionManager"
    },
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys"
      },
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "io.etcd.jetcd.launcher.EtcdContainer"
    },
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  }
]
