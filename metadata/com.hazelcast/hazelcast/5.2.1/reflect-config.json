[
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[B"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "[B"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[C"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[D"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[F"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[I"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[J"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
    },
    "name": "[Lcom.hazelcast.internal.networking.InboundHandler;"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
    },
    "name": "[Lcom.hazelcast.internal.networking.OutboundHandler;"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[Ljava.lang.String;"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "[Ljava.lang.String;"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[S"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "[Z"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.aggregation.impl.AggregatorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
    },
    "name": "com.hazelcast.aws.AwsDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
    },
    "name": "com.hazelcast.azure.AzureDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cache.impl.CacheDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "com.hazelcast.cache.impl.CacheMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "com.hazelcast.cache.impl.CacheStatisticsMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cardinality.impl.CardinalityEstimatorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.ServiceLoader"
    },
    "name": "com.hazelcast.client.HazelcastClient"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.client.impl.ClientDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEngineImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEngineImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.clientside.DefaultClientExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
    },
    "name": "com.hazelcast.client.impl.connection.ClientConnection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
    },
    "name": "com.hazelcast.client.impl.connection.tcp.TcpClientConnection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientListProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientMultiMapProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientQueueProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientReplicatedMapProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientRingbufferProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientSetProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.proxy.ClientTopicProxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "com.hazelcast.client.impl.spi.ClientContext"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.client.impl.spi.ClientInvocationService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.client.impl.spi.ClientInvocationService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.ClientInvocationService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.ClientInvocationService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.client.impl.spi.ClientListenerService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.client.impl.spi.ClientListenerService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.ClientListenerService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.ClientListenerService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
    "methods": [
      {
        "name": "maxCurrentInvocations",
        "parameterTypes": []
      },
      {
        "name": "startedInvocations",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    "name": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
    "methods": [
      {
        "name": "eventQueueSize",
        "parameterTypes": []
      },
      {
        "name": "eventsProcessed",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.cluster.Cluster",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.cluster.Cluster"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.cluster.Cluster"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.cluster.Cluster"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.cluster.Cluster",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "com.hazelcast.collection.LocalCollectionStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "com.hazelcast.collection.LocalCollectionStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "com.hazelcast.collection.LocalListStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.queue.QueueService"
    },
    "name": "com.hazelcast.collection.LocalQueueStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "com.hazelcast.collection.LocalSetStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.collection.impl.collection.CollectionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.collection.impl.queue.QueueDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.AbstractSymmetricEncryptionConfig",
    "methods": [
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.CardinalityEstimatorConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.Config",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addDurableExecutorConfig",
        "parameterTypes": [
          "com.hazelcast.config.DurableExecutorConfig"
        ]
      },
      {
        "name": "addExecutorConfig",
        "parameterTypes": [
          "com.hazelcast.config.ExecutorConfig"
        ]
      },
      {
        "name": "addPNCounterConfig",
        "parameterTypes": [
          "com.hazelcast.config.PNCounterConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.DurableExecutorConfig",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDurability",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatisticsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.ExecutorConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.ExecutorConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.ExecutorConfig",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatisticsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.FlakeIdGeneratorConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.ListConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.ListConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.ListConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.MapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.MapConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.MapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.MultiMapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.MultiMapConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.MultiMapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.NetworkConfig",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setSymmetricEncryptionConfig",
        "parameterTypes": [
          "com.hazelcast.config.SymmetricEncryptionConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.PNCounterConfig",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReplicaCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatisticsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.QueueConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.QueueConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.QueueConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.ReplicatedMapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.ReplicatedMapConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.ReplicatedMapConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.RingbufferConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.RingbufferConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.RingbufferConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.ScheduledExecutorConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.SetConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.SetConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.SetConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.config.MemberDomConfigProcessor"
    },
    "name": "com.hazelcast.config.SymmetricEncryptionConfig",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setIterationCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.Config"
    },
    "name": "com.hazelcast.config.TopicConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.config.TopicConfig"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.dynamicconfig.DynamicConfigurationAwareConfig"
    },
    "name": "com.hazelcast.config.TopicConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.event.impl.CpEventDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.cp.internal.RaftService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.cp.internal.RaftService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.RaftServiceDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.RaftDataServiceDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.datastructures.RaftDataServiceDescriptorProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.atomiclong.AtomicLongDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.atomicref.AtomicRefDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.countdownlatch.CountDownLatchDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.lock.LockDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.datastructures.semaphore.SemaphoreDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.raft.impl.RaftDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.cp.internal.session.RaftSessionServiceDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.durableexecutor.impl.DurableExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.executor.impl.ExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.flakeidgen.impl.FlakeIdGeneratorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
    },
    "name": "com.hazelcast.gcp.GcpDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.BuildInfoProvider"
    },
    "name": "com.hazelcast.instance.GeneratedBuildProperties",
    "fields": [
      {
        "name": "BUILD"
      },
      {
        "name": "COMMIT_ID"
      },
      {
        "name": "DISTRIBUTION"
      },
      {
        "name": "REVISION"
      },
      {
        "name": "SERIALIZATION_VERSION"
      },
      {
        "name": "VERSION"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cache.impl.AbstractCacheService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.queue.QueueService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.ProviderHelper"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.topic.impl.TopicService"
    },
    "name": "com.hazelcast.instance.LocalInstanceStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.NodeExtensionFactory"
    },
    "name": "com.hazelcast.instance.impl.DefaultNodeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.instance.impl.Node"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.ascii.TextProtocolsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.ClusterClock",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.ClusterClock"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterClock"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.ClusterClock"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterClock",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.ClusterService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.ClusterService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.ClusterService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.ClusterStateListener",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.ClusterStateListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterStateListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.ClusterStateListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.ClusterStateListener",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
    "methods": [
      {
        "name": "getClusterTimeDiff",
        "parameterTypes": []
      },
      {
        "name": "getClusterUpTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
    "methods": [
      {
        "name": "getSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.config.ConfigDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.crdt.CRDTDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.journal.EventJournalDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.locksupport.LockDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.longregister.LongRegisterDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.longregister.LongRegisterServiceDescriptorProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.management.ManagementDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.memory.DefaultMemoryStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "methods": [
      {
        "name": "getCommittedHeap",
        "parameterTypes": []
      },
      {
        "name": "getCommittedNative",
        "parameterTypes": []
      },
      {
        "name": "getFreeHeap",
        "parameterTypes": []
      },
      {
        "name": "getFreeNative",
        "parameterTypes": []
      },
      {
        "name": "getFreePhysical",
        "parameterTypes": []
      },
      {
        "name": "getMaxHeap",
        "parameterTypes": []
      },
      {
        "name": "getMaxMetadata",
        "parameterTypes": []
      },
      {
        "name": "getMaxNative",
        "parameterTypes": []
      },
      {
        "name": "getTotalPhysical",
        "parameterTypes": []
      },
      {
        "name": "getUsedHeap",
        "parameterTypes": []
      },
      {
        "name": "getUsedMetadata",
        "parameterTypes": []
      },
      {
        "name": "getUsedNative",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.memory.MemoryStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEngineImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.internal.metrics.StaticMetricsProvider",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.metrics.managementcenter.MetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cache.impl.AbstractCacheService"
    },
    "name": "com.hazelcast.internal.monitor.LocalCacheStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "com.hazelcast.internal.monitor.impl.AbstractLocalCollectionStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "com.hazelcast.internal.monitor.impl.AbstractLocalCollectionStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cache.impl.AbstractCacheService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalCacheStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalListStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalMapStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMaxGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxSetLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalSetLatency",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.queue.QueueService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalQueueStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEventOperationCount",
        "parameterTypes": []
      },
      {
        "name": "total",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalReplicatedMapStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMaxGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getMaxRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalGetLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalPutLatency",
        "parameterTypes": []
      },
      {
        "name": "getTotalRemoveLatency",
        "parameterTypes": []
      },
      {
        "name": "total",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalSetStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.topic.impl.TopicService"
    },
    "name": "com.hazelcast.internal.monitor.impl.LocalTopicStatsImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.InboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.InboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.InboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.InboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.InboundPipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.Networking",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.Networking"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.Networking"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.Networking",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.Networking",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.OutboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.OutboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.OutboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.OutboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.OutboundPipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.MigratablePipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.MigratablePipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.MigratablePipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.MigratablePipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.MigratablePipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioInboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioInboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.NioInboundPipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioNetworking",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.NioNetworking"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.NioNetworking"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioNetworking",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.NioNetworking",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioOutboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioOutboundPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.NioOutboundPipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.NioPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.NioPipeline"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioPipeline",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.NioPipeline",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.NioThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.NioThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.NioThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.NioThread",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "idleTimeMillis",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "com.hazelcast.internal.nio.ClassLoaderUtil$IrresolvableConstructor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
    },
    "name": "com.hazelcast.internal.nio.Connection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.nio.Connection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListenable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.nio.ConnectionListener",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.IPartitionService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.IPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.IPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.IPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.IPartitionService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.InternalPartitionService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.InternalPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.InternalPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.InternalPartitionService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.InternalPartitionService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.partition.MigrationAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.PartitionAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.PartitionAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.PartitionAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.PartitionAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.PartitionAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.PartitionReplicaVersionManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
    "methods": [
      {
        "name": "getMaxAllowedBackupCount",
        "parameterTypes": []
      },
      {
        "name": "getMigrationQueueSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager",
    "methods": [
      {
        "name": "migrationActiveProbe",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    "name": "com.hazelcast.internal.partition.impl.MigrationStats",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionReplicaManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager",
    "methods": [
      {
        "name": "activePartitionCount",
        "parameterTypes": []
      },
      {
        "name": "localPartitionCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.partition.impl.PartitionStateManager",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.serialization.impl.compact.schema.SchemaDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.server.ServerConnection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.server.ServerConnectionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
    },
    "name": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
    },
    "name": "com.hazelcast.internal.server.tcp.TcpServerAcceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.server.tcp.TcpServerConnection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "connectionCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "com.hazelcast.internal.server.tcp.TcpServerConnectionManagerBase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "com.hazelcast.internal.services.ClientAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.CoreService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.CoreService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.CoreService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.CoreService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.services.CoreService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.services.CoreService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.CoreService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.internal.services.CoreService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.services.GracefulShutdownAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.ManagedService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.services.ManagedService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "com.hazelcast.internal.services.ManagedService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "com.hazelcast.internal.services.MembershipAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.internal.services.PostJoinAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.internal.services.PreJoinAwareService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.services.TransactionalService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.services.TransactionalService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.services.TransactionalService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.services.TransactionalService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.internal.services.TransactionalService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.usercodedeployment.impl.UserCodeDeploymentSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.internal.util.collection.UtilCollectionSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.counters.SwCounter$UnsafeSwCounter"
    },
    "name": "com.hazelcast.internal.util.counters.SwCounter$UnsafeSwCounter",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "com.hazelcast.internal.util.executor.ManagedExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCompletedTaskCount",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getRemainingQueueCapacity",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "com.hazelcast.internal.util.executor.NamedThreadPoolExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$DoubleAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LinTrendAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongDoubleAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongLongAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$MutableReferenceHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$PickAnyAccHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.config.JetConfigDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.core.CoreSerializerHooks$JetEventHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.core.CoreSerializerHooks$WatermarkHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.core.JetDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.core.metrics.MetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$ItemsByTagHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$KeyedWindowResultHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TagHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TimestampedItemHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple3Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple4Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple5Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$WindowResultHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.impl.aggregate.AggregateDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.CompositeMessageTaskFactory"
    },
    "name": "com.hazelcast.jet.impl.client.protocol.task.JetMessageTaskFactoryProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.hazelcast.spi.impl.NodeEngine"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastEntryHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastKeyHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$DoneItemHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$SnapshotBarrierHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.execution.init.CustomClassLoadedObject$Hook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.jet.impl.util.FunctionsSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
    },
    "name": "com.hazelcast.jet.json.JsonSerializerHooks$DeferredMapHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.json.internal.JsonDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
    },
    "name": "com.hazelcast.kubernetes.HazelcastKubernetesDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.InstanceTrackingConfig"
    },
    "name": "com.hazelcast.license.util.LicenseHelper"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapService"
    },
    "name": "com.hazelcast.map.LocalMapStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
    },
    "name": "com.hazelcast.map.LocalMapStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.map.impl.MapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.multimap.impl.MultiMapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.projection.impl.ProjectionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.query.impl.predicates.SqlPredicate"
    },
    "name": "com.hazelcast.query.impl.predicates.AndPredicate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.query.impl.predicates.PredicateDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
    },
    "name": "com.hazelcast.replicatedmap.LocalReplicatedMapStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.replicatedmap.impl.operation.ReplicatedMapDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.ringbuffer.impl.RingbufferDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.scheduledexecutor.impl.ScheduledExecutorDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
    },
    "name": "com.hazelcast.spi.discovery.multicast.MulticastDiscoveryStrategyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.spi.impl.SpiDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.EventService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "methods": [
      {
        "name": "eventsProcessed",
        "parameterTypes": []
      },
      {
        "name": "getEventQueueSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.DefaultNodeExtension"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceConstructor"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceConstructor$$Lambda$1553/0x0000000800ecf330"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceContextImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.querycache.NodeQueryCacheContext"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.querycache.publisher.DefaultPublisherContext"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "com.hazelcast.spi.impl.executionservice.TaskScheduler",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "com.hazelcast.spi.impl.executionservice.TaskScheduler",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.executionservice.TaskScheduler"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.executionservice.TaskScheduler",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.spi.impl.merge.SplitBrainDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
    "methods": [
      {
        "name": "getExecutedOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getGenericPriorityQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getGenericQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getGenericThreadCount",
        "parameterTypes": []
      },
      {
        "name": "getPartitionThreadCount",
        "parameterTypes": []
      },
      {
        "name": "getPriorityQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getRunningGenericOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getRunningOperationCount",
        "parameterTypes": []
      },
      {
        "name": "getRunningPartitionOperationCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
    "methods": [
      {
        "name": "normalPendingCount",
        "parameterTypes": []
      },
      {
        "name": "priorityPendingCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.OperationParker",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
    "methods": [
      {
        "name": "getParkQueueCount",
        "parameterTypes": []
      },
      {
        "name": "getTotalParkedOperationCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    "name": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.OperationService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
    "methods": [
      {
        "name": "responseQueueSize",
        "parameterTypes": []
      },
      {
        "name": "responsesBackup",
        "parameterTypes": []
      },
      {
        "name": "responsesError",
        "parameterTypes": []
      },
      {
        "name": "responsesMissing",
        "parameterTypes": []
      },
      {
        "name": "responsesNormal",
        "parameterTypes": []
      },
      {
        "name": "responsesTimeout",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MethodProbe$DoubleMethodProbe"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "methods": [
      {
        "name": "invocationsUsedPercentage",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "methods": [
      {
        "name": "getLastCallId",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.InternalProxyService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.ProxyService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
    "methods": [
      {
        "name": "getProxyCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.sql.impl.SqlDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.topic.impl.TopicService"
    },
    "name": "com.hazelcast.topic.LocalTopicStats",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.topic.impl.TopicDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "com.hazelcast.transaction.TransactionManagerService",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.transaction.impl.TransactionDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
    },
    "name": "com.hazelcast.wan.impl.WanDataSerializerHook",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.XmlUtil"
    },
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.config.ClientConfig"
    },
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.AbstractXmlConfigHelper"
    },
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.XmlUtil"
    },
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.config.AbstractXmlConfigBuilder"
    },
    "name": "com.sun.org.apache.xpath.internal.functions.FuncNot",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Boolean",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.compact.record.JavaRecordSerializer"
    },
    "name": "java.lang.Class",
    "methods": [
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.ModularJavaUtils"
    },
    "name": "java.lang.Class",
    "methods": [
      {
        "name": "getModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "java.lang.Enum"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.lang.Iterable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.lang.Iterable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.lang.Iterable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.lang.Iterable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    "name": "java.lang.Iterable",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.lang.Iterable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.ModularJavaUtils"
    },
    "name": "java.lang.Module",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.ModularJavaUtils"
    },
    "name": "java.lang.ModuleLayer",
    "methods": [
      {
        "name": "boot",
        "parameterTypes": []
      },
      {
        "name": "modules",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cache.impl.AbstractCacheService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.ClientEngineImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.list.ListService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.queue.QueueService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.collection.impl.set.SetService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftService"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.DefaultNodeExtension"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle$MetricsContext"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl$$Lambda$1635/0x0000000800f8ad98"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.ProviderHelper"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.SourceMetadata"
    },
    "name": "java.lang.Object",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceConstructor"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceConstructor$$Lambda$1553/0x0000000800ecf330"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.MapServiceContextImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.querycache.NodeQueryCacheContext"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.map.impl.querycache.publisher.DefaultPublisherContext"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.topic.impl.TopicService"
    },
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    "name": "java.lang.Object"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "java.lang.Runnable",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
    },
    "name": "java.lang.Runnable",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "java.lang.Runnable",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "java.lang.Runnable",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.lang.Runnable"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.JavaVersion"
    },
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.JavaVersion"
    },
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.String"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.lang.String"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "java.lang.Thread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Thread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "java.lang.Thread",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "java.lang.Thread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    "name": "java.lang.Thread",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.lang.Thread"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.serialization.impl.compact.record.JavaRecordSerializer"
    },
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getGenericType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.math.BigDecimal"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.math.BigInteger"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.security.KeyStoreSpi"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.security.SecureRandomParameters"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.Date"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "java.util.Date"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "java.util.concurrent.AbstractExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.HazelcastClient"
    },
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
    },
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
    },
    "name": "java.util.concurrent.Executor"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    "name": "java.util.concurrent.Executor",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "java.util.concurrent.Executor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "java.util.concurrent.ExecutorService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
    },
    "name": "java.util.concurrent.ThreadPoolExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "java.util.concurrent.TimeUnit"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.function.Consumer",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.util.function.Consumer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.util.function.Consumer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.util.function.Consumer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
    },
    "name": "java.util.function.Consumer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.util.function.Consumer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    "name": "java.util.function.Consumer",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    "name": "java.util.function.Consumer",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    "name": "java.util.function.Consumer",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.util.function.Consumer"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
    },
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.instance.impl.Node"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.metrics.impl.MetricsService"
    },
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    "name": "java.util.function.Supplier",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.NodeEngineImpl"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    "name": "java.util.function.Supplier",
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    "name": "java.util.function.Supplier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.core.Hazelcast"
    },
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "javax.cache.Caching"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "javax.cache.configuration.CompleteConfiguration"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "javax.cache.configuration.FactoryBuilder$SingletonFactory"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "javax.cache.expiry.AccessedExpiryPolicy"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "javax.cache.expiry.Duration"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
    },
    "name": "javax.cache.expiry.EternalExpiryPolicy"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "javax.cache.integration.CacheLoaderException"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "javax.cache.integration.CacheWriterException"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "javax.cache.management.CacheMXBean",
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    "name": "javax.cache.management.CacheStatisticsMXBean",
    "queryAllPublicMethods": true
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.nio.ClassLoaderUtil"
    },
    "name": "javax.cache.processor.EntryProcessorException"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.memory.impl.UnsafeUtil$1"
    },
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.networking.nio.SelectorOptimizer"
    },
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "condition": {
      "typeReachable": "com.hazelcast.internal.util.phonehome.PhoneHome"
    },
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
