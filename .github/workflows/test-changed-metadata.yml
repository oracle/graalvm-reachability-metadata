name: "Test changed metadata"

on:
  pull_request:
    branches:
      - master

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: true

jobs:
  get-changed-metadata:
    name: "📋 Get a list of all changed libraries"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      none-found: ${{ steps.set-matrix.outputs.none-found }}
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "🔧 Prepare environment"
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "🕸️ Populate matrix"
        id: set-matrix
        run: |
          ./gradlew generateMatrixDiffCoordinates -PbaseCommit=${{ github.event.pull_request.base.sha }} -PnewCommit=${{ github.event.pull_request.head.sha }}

  test-changed-metadata:
    name: "🧪 ${{ matrix.coordinates }} (GraalVM ${{ matrix.versions.graalvm }} ${{ matrix.versions.java }} @ ${{ matrix.os }})"
    if: needs.get-changed-metadata.result == 'success' && needs.get-changed-metadata.outputs.none-found != 'true'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    needs: get-changed-metadata

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-changed-metadata.outputs.matrix) }}
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v3
      - name: "Disable docker"
        run: sudo cat ./github/workflows/dockerd.json > /etc/docker/daemon.json
      - name: "🔧 Prepare environment"
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.versions.graalvm }}
          java-version: ${{ matrix.versions.java }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: "🧪 Run '${{ matrix.coordinates }}' tests"
        run: |
          ./gradlew test -Pcoordinates=${{ matrix.coordinates }}

  all-metadata-passed:
    name: "🧪 All metadata tests have passed"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 1
    if: ${{ always() }}
    needs: test-changed-metadata
    steps:
      - name: "All tests passed"
        if: needs.test-changed-metadata.result == 'success'
        run: exit 0

      - name: "Some tests failed"
        if: needs.test-changed-metadata.result == 'failure'
        run: exit 1
