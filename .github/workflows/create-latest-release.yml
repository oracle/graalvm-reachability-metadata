name: "Create latest release"

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  get-changed-metadata:
    name: "📋 Get a list of changed metadata"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      none-found: ${{ steps.set-matrix.outputs.none-found }}
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "🔧 Setup java"
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
      - name: "🕸️ Get changed metadata matrix"
        id: set-matrix
        run: |
          ./gradlew generateMatrixDiffCoordinates -PbaseCommit=$(git show-ref -s "latest") -PnewCommit=$(git rev-parse HEAD)

  release:
    needs: get-changed-metadata
    if: needs.get-changed-metadata.result == 'success' && needs.get-changed-metadata.outputs.none-found != 'true'
    name: "🚀 Create a release"
    runs-on: "ubuntu-20.04"
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "🔧 Setup java"
        uses: actions/setup-java@v4
        with:
          distribution: 'graalvm'
          java-version: '21'
      - name: "⬆️ Update version"
        run: |
          sed -i "s/project.version(\"1.0.0-SNAPSHOT\")/project.version(\"latest\")/g" build.gradle
      - name: "🔍 Run spotless check"
        run: |
          ./gradlew spotlessCheck
      - name: "🏭 Generate release artifacts"
        run: |
          ./gradlew package
      - name: "Delete previous latest release and tag"
        run: |
          gh release delete "latest" --cleanup-tag -y
      - name: "📄 Commit changes"
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
          git add .
          git commit -m "Update latest release"
          git tag "latest"
          git push origin "latest"
      - name: "📝 Publish a release"
        run: |
          gh release create "latest" build/graalvm-reachability-metadata-*.zip --title "Latest"